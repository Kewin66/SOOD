{"ast":null,"code":"var _jsxFileName = \"/local/mnt/workspace/Sood/Kanban/SOOD/kanban_board/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faTrash);\nconst item = {\n  id: v4(),\n  name: \"Place order\"\n};\nconst item2 = {\n  id: v4(),\n  name: \"Track shipping status\"\n};\n\nfunction App() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Todo\",\n      items: [item, item2]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"Review\": {\n      title: \"Review\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    }\n  });\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    if (!destination) {\n      return;\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    }\n\n    const itemCopy = { ...state[source.droppableId].items[source.index]\n    };\n    setState(prev => {\n      prev = { ...prev\n      };\n      prev[source.droppableId].items.splice(source.index, 1);\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy);\n      return prev;\n    });\n  };\n\n  const addItem = () => {\n    setState(prev => {\n      return { ...prev,\n        todo: {\n          title: \"Todo\",\n          items: [{\n            id: v4(),\n            name: text\n          }, ...prev.todo.items]\n        }\n      };\n    });\n    setText(\"\");\n  };\n\n  const deleteItem = () => {\n    console.log(\"Deleting list item\");\n    /*  const filteredItems= {...state.items.filter(item =>\n        item.id!==id)}\n      setState(prev => {\n        return {\n          items: [filteredItems]\n        }\n       })*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Form\",\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: _.map(state, (data, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: key,\n            children: (provided, snapshot) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"droppable-col\",\n                children: [data.items.map((el, index) => {\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    index: index,\n                    draggableId: el.id,\n                    children: (provided, snapshot) => {\n                      console.log(snapshot);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `item ${snapshot.isDragging && \"dragging\"}`,\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        children: [el.name, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: deleteItem,\n                          children: \" Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 33\n                      }, this);\n                    }\n                  }, el.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 27\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cZcA/wyKspbgUbMmn5MqCCQ7ZSc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/local/mnt/workspace/Sood/Kanban/SOOD/kanban_board/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","_","v4","library","faTrash","add","item","id","name","item2","App","text","setText","state","setState","title","items","handleDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","addItem","todo","deleteItem","console","log","e","target","value","map","data","key","provided","snapshot","innerRef","droppableProps","el","isDragging","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport {v4} from \"uuid\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\nconst item = {\n  id: v4(),\n  name: \"Place order\"\n}\n\nconst item2 = {\n  id: v4(),\n  name: \"Track shipping status\"\n}\n\nfunction App() {\n  const [text, setText] = useState(\"\")\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Todo\",\n      items: [item, item2]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"Review\": {\n      title: \"Review\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    }\n  })\n\n  const handleDragEnd = ({destination, source}) => {\n    if (!destination) {\n      return\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return\n    }\n\n\n    const itemCopy = {...state[source.droppableId].items[source.index]}\n\n    setState(prev => {\n      prev = {...prev}\n      prev[source.droppableId].items.splice(source.index, 1)\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\n\n      return prev\n    })\n  }\n\n  const addItem = () => {\n    setState(prev => {\n      return {\n        ...prev,\n        todo: {\n          title: \"Todo\",\n          items: [\n            {\n              id: v4(),\n              name: text\n            },\n            ...prev.todo.items\n          ]\n        }\n      }\n    })\n\n    setText(\"\")\n  }\n\n  const deleteItem = () => {\n\nconsole.log(\"Deleting list item\");\n\n    /*  const filteredItems= {...state.items.filter(item =>\n        item.id!==id)}\n      setState(prev => {\n        return {\n          items: [filteredItems]\n        }\n\n      })*/\n\n    }\n  return (\n    <div className=\"App\">\n      <div>\n        <input className = {\"Form\"} type=\"text\" value={text} onChange={(e) => setText(e.target.value)}/>\n        <button className = {\"btn\"} onClick={addItem}>Add</button>\n      </div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {_.map(state, (data, key) => {\n          return(\n            <div key={key} className={\"column\"}>\n              <h3>{data.title}\n              </h3>\n              <Droppable droppableId={key}>\n                {(provided, snapshot) => {\n                  return(\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      className={\"droppable-col\"}\n                    >\n                      {data.items.map((el, index) => {\n                        return(\n                          <Draggable key={el.id} index={index} draggableId={el.id}>\n                            {(provided, snapshot) => {\n                              console.log(snapshot)\n                              return(\n                                <div\n                                  className={`item ${snapshot.isDragging && \"dragging\"}`}\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  {el.name} <button onClick={deleteItem}> Delete\n                                  </button>\n                                </div>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n            </div>\n          )\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}